#define NUMBER_W 5
#define NUMBER_H 7
static char number[][NUMBER_H][NUMBER_W] = {
    {
     {0, 0, 1, 0, 0},
     {0, 1, 0, 1, 0},
     {1, 0, 0, 0, 1},
     {1, 0, 0, 0, 1},
     {1, 0, 0, 0, 1},
     {0, 1, 0, 1, 0},
     {0, 0, 1, 0, 0}
     }, {
     {0, 0, 1, 0, 0},
     {0, 1, 1, 0, 0},
     {0, 0, 1, 0, 0},
     {0, 0, 1, 0, 0},
     {0, 0, 1, 0, 0},
     {0, 0, 1, 0, 0},
     {0, 0, 1, 0, 0}
     }, {
     {0, 1, 1, 1, 0},
     {0, 1, 0, 1, 0},
     {0, 0, 0, 1, 0},
     {0, 0, 1, 0, 0},
     {0, 0, 1, 0, 0},
     {0, 1, 0, 0, 0},
     {0, 1, 1, 1, 0}
     }, {
     {0, 0, 1, 1, 0},
     {0, 1, 0, 0, 1},
     {0, 0, 0, 0, 1},
     {0, 0, 0, 1, 0},
     {0, 0, 0, 0, 1},
     {0, 1, 0, 0, 1},
     {0, 0, 1, 1, 0}
     }, {
     {0, 0, 0, 1, 0},
     {0, 0, 1, 1, 0},
     {0, 1, 0, 1, 0},
     {1, 1, 1, 1, 1},
     {0, 0, 0, 1, 0},
     {0, 0, 0, 1, 0},
     {0, 0, 0, 1, 0}
     }, {
     {0, 1, 1, 1, 0},
     {0, 1, 0, 0, 0},
     {0, 1, 0, 0, 0},
     {0, 1, 1, 1, 0},
     {0, 0, 0, 1, 0},
     {0, 0, 0, 1, 0},
     {0, 1, 1, 1, 0}
     }, {
     {0, 0, 1, 1, 0},
     {0, 1, 0, 0, 0},
     {0, 1, 0, 0, 0},
     {0, 1, 1, 1, 0},
     {0, 1, 0, 1, 0},
     {0, 1, 0, 1, 0},
     {0, 0, 1, 0, 0}
     }, {
     {0, 1, 1, 1, 0},
     {0, 0, 0, 1, 0},
     {0, 0, 0, 1, 0},
     {0, 1, 1, 0, 0},
     {0, 0, 1, 0, 0},
     {0, 0, 1, 0, 0},
     {0, 1, 0, 0, 0}
     }, {
     {0, 1, 1, 1, 0},
     {1, 0, 0, 0, 1},
     {0, 1, 0, 1, 0},
     {1, 1, 1, 1, 1},
     {0, 1, 0, 1, 0},
     {1, 0, 0, 0, 1},
     {0, 1, 1, 1, 0}
     },{
     {0, 0, 1, 0, 0},
     {0, 1, 0, 1, 0},
     {0, 1, 0, 1, 0},
     {0, 0, 1, 1, 0},
     {0, 0, 0, 1, 0},
     {0, 0, 1, 0, 0},
     {0, 1, 0, 0, 0}
     }
};

static inline void draw_number(SDL_Surface *surface,int left,int top,
        int num,Uint32 color)
{
    int x,y;
    int n=num;
    while(n>9) {
        n/=10;
        left+=NUMBER_W;
    }
    do {
        n=num%10;
        num/=10;
        for(x=0;x<NUMBER_W;x++) {
            for(y=0;y<NUMBER_H;y++) {
                if(number[n][y][x])
                    putpixel(screen, left+x, top+y, color);
            }
        }
        left-=NUMBER_W;
    } while(num>0);
}

